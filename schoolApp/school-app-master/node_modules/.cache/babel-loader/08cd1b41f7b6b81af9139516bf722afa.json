{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ali/Documents/WS21/Training Spring React/todo-app/src/Components/todo/TodoApp.jsx\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport AuthenticationService from './AuthenticationService';\nimport AuthenticatedRoute from './AuthenticatedRoute.jsx';\nimport HeaderComponent from './HeaderComponent';\nimport LoginComponent from './LoginComponent';\nimport ListTodosComponent from './ListTodoComponent';\nimport FooterComponent from './FooterComponent';\nimport LogoutComponent from './src/Components/todo/TodoApp.jsx';\nimport WellcomeComponent from './WellcomeComponent';\nimport ErrorComponent from './ErrorComponent';\n\nclass TodoApp extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoApp\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            component: LoginComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            component: LoginComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n            path: \"/wellcome/:name\",\n            component: WellcomeComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n            path: \"/todos\",\n            component: ListTodosComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n            path: \"/logout\",\n            component: LogoutComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            component: ErrorComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FooterComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n} // class LoginComponent extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             username: 'username',\n//             password: '',\n//             failed: false,\n//             success: false\n//         }\n//     }\n//     handleChange = (event) => {\n//         console.log(event.target.name);\n//         this.setState(\n//             {\n//                 [event.target.name]: event.target.value\n//             }\n//         )\n//     }\n//     loginClicked = () => {\n//         if (this.state.username === 'ali' && this.state.password === 'jemel') {\n//             AuthenticationService.registerSuccessfullLogin(this.state.username, this.state.password);\n//             this.props.history.push(`/wellcome/${this.state.username}`)\n//             //this.setState({success : true})\n//             //this.setState({failed : false})\n//         } else {\n//             this.setState({ failed: true })\n//             this.setState({ success: false })\n//         }\n//     }\n//     render() {\n//         return (\n//             //TRUE && True returns the second term !!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//             <div>\n//                 <h1>Login</h1>\n//                 <div className=\"container\">\n//                     {this.state.failed && <div className=\"alert alert-warning\">Invalid Creds</div>}\n//                     {this.state.success && <div>Success Login</div>}\n//                     {/*<ShowLoginSuccessMessage ShowSuccessMessage={this.state.success}/>*/}\n//                     <form className=\"main-form\">\n//                         <div class=\"form-group\">\n//                             <label for=\"username\">Name </label>\n//                             <input class=\"form-control\" type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}></input>\n//                         </div>\n//                         <div className=\"form-group\">\n//                             <label for=\"password\">Password</label>\n//                             <input className=\"form-control\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}></input>\n//                         </div>\n//                         <button className=\"btn btn-primary \" onClick={this.loginClicked}>Login</button>\n//                     </form>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n// function ShowLoginFailMessage(props) {\n//     if(props.ShowFailMessage) {\n//        return  <div>EPIC FAIL</div>\n//     }\n//     else return null\n// }\n// function ShowLoginSuccessMessage(props) {\n//     if(props.ShowSuccessMessage) {\n//        return  <div>Login Success</div>\n//     } \n//     else return null\n// }\n\n\nexport default TodoApp;","map":{"version":3,"sources":["/Users/ali/Documents/WS21/Training Spring React/todo-app/src/Components/todo/TodoApp.jsx"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Link","AuthenticationService","AuthenticatedRoute","HeaderComponent","LoginComponent","ListTodosComponent","FooterComponent","LogoutComponent","WellcomeComponent","ErrorComponent","TodoApp","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,IAAjD,QAA6D,kBAA7D;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,kBAAP,MAA+B,0BAA/B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,kBAAP,MAA+B,qBAA/B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAGA,MAAMC,OAAN,SAAsBf,SAAtB,CAAgC;AAC5BgB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BAEI,QAAC,MAAD;AAAA,gCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI,QAAC,MAAD;AAAA,kCAEI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAgB,YAAA,KAAK,MAArB;AAAsB,YAAA,SAAS,EAAEP;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,SAAS,EAAEA;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII,QAAC,kBAAD;AAAoB,YAAA,IAAI,EAAC,iBAAzB;AAA2C,YAAA,SAAS,EAAEI;AAAtD;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI,QAAC,kBAAD;AAAoB,YAAA,IAAI,EAAC,QAAzB;AAAkC,YAAA,SAAS,EAAEH;AAA7C;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI,QAAC,kBAAD;AAAoB,YAAA,IAAI,EAAC,SAAzB;AAAmC,YAAA,SAAS,EAAEE;AAA9C;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI,QAAC,KAAD;AAAO,YAAA,SAAS,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAcI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA4BH;;AA9B2B,C,CAwChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAGA;AAIA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAeC,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom'\nimport AuthenticationService from './AuthenticationService'\nimport AuthenticatedRoute from './AuthenticatedRoute.jsx'\nimport HeaderComponent from './HeaderComponent'\nimport LoginComponent from './LoginComponent'\nimport ListTodosComponent from './ListTodoComponent'\nimport FooterComponent from './FooterComponent'\nimport LogoutComponent from './src/Components/todo/TodoApp.jsx'\nimport WellcomeComponent from './WellcomeComponent'\nimport ErrorComponent from './ErrorComponent'\n\n\nclass TodoApp extends Component {\n    render() {\n        return (\n            <div className=\"todoApp\">\n\n                <Router>\n                    <HeaderComponent />\n\n                    <Switch>\n\n                        <Route path=\"/\" exact component={LoginComponent} />\n                        <Route path=\"/login\" component={LoginComponent} />\n                        <AuthenticatedRoute path=\"/wellcome/:name\" component={WellcomeComponent} />\n                        <AuthenticatedRoute path=\"/todos\" component={ListTodosComponent} />\n                        <AuthenticatedRoute path=\"/logout\" component={LogoutComponent} />\n                        <Route component={ErrorComponent} />\n\n                    </Switch>\n\n                    <FooterComponent />\n\n\n\n                </Router>\n\n                {/*<LoginComponent />\n               <WellcomeComponent />*/}\n\n            </div>\n        )\n    }\n}\n\n\n\n\n\n\n\n\n// class LoginComponent extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             username: 'username',\n//             password: '',\n//             failed: false,\n//             success: false\n//         }\n//     }\n\n//     handleChange = (event) => {\n//         console.log(event.target.name);\n//         this.setState(\n//             {\n//                 [event.target.name]: event.target.value\n//             }\n//         )\n//     }\n\n//     loginClicked = () => {\n//         if (this.state.username === 'ali' && this.state.password === 'jemel') {\n\n//             AuthenticationService.registerSuccessfullLogin(this.state.username, this.state.password);\n//             this.props.history.push(`/wellcome/${this.state.username}`)\n//             //this.setState({success : true})\n//             //this.setState({failed : false})\n//         } else {\n//             this.setState({ failed: true })\n//             this.setState({ success: false })\n//         }\n\n//     }\n//     render() {\n//         return (\n//             //TRUE && True returns the second term !!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//             <div>\n\n//                 <h1>Login</h1>\n//                 <div className=\"container\">\n\n\n\n\n//                     {this.state.failed && <div className=\"alert alert-warning\">Invalid Creds</div>}\n//                     {this.state.success && <div>Success Login</div>}\n\n//                     {/*<ShowLoginSuccessMessage ShowSuccessMessage={this.state.success}/>*/}\n\n//                     <form className=\"main-form\">\n\n//                         <div class=\"form-group\">\n\n//                             <label for=\"username\">Name </label>\n//                             <input class=\"form-control\" type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}></input>\n\n//                         </div>\n\n//                         <div className=\"form-group\">\n\n//                             <label for=\"password\">Password</label>\n//                             <input className=\"form-control\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}></input>\n\n//                         </div>\n\n//                         <button className=\"btn btn-primary \" onClick={this.loginClicked}>Login</button>\n//                     </form>\n\n\n//                 </div>\n\n\n\n//             </div>\n\n//         )\n//     }\n// }\n\n\n\n// function ShowLoginFailMessage(props) {\n//     if(props.ShowFailMessage) {\n//        return  <div>EPIC FAIL</div>\n//     }\n//     else return null\n// }\n\n\n// function ShowLoginSuccessMessage(props) {\n//     if(props.ShowSuccessMessage) {\n//        return  <div>Login Success</div>\n//     } \n//     else return null\n// }\n\n\nexport default TodoApp"]},"metadata":{},"sourceType":"module"}