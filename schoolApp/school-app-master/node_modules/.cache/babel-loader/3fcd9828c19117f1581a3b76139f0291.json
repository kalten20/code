{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ali/Documents/WS21/Training Spring React/school-app/src/Components/todo/TodoComponent.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport TodoDataService from '../../api/TodoDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\n\nclass TodoComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = values => {\n      let username = AuthenticationService.getLoggedInUserName();\n      let todo = {\n        id: this.state.id,\n        description: values.description,\n        targetDate: values.targetDate\n      };\n\n      if (this.state.id == -1) {\n        TodoDataService.createTodo(username, todo).then(() => {\n          this.props.history.push(`/termine`);\n        });\n      } else {\n        TodoDataService.updateTodo(username, this.state.id, {\n          id: this.state.id,\n          description: values.description,\n          targetDate: values.targetDate\n        }).then(() => {\n          this.props.history.push(`/termine`);\n        });\n      }\n    };\n\n    this.validate = values => {\n      let errors = {};\n\n      if (!values.description) {\n        errors.description = 'Enter a description';\n      } else if (values.description.length < 5) {\n        errors.description = 'at least 5 chars';\n      }\n\n      if (!moment(values.targetDate).isValid()) {\n        errors.targetDate = 'Ungultiges Datum';\n      }\n\n      return errors;\n    };\n\n    this.title = () => {\n      if (this.props.match.params.id === -1) {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Termin erstellen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 20\n        }, this);\n      } else return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Termin \", this.props.match.params.id, \" bearbeiten\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }, this);\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      description: '',\n      targetDate: moment(new Date()).format('YYYY-MM-DD')\n    };\n  }\n\n  componentDidMount() {\n    let username = AuthenticationService.getLoggedInUserName();\n\n    if (this.state.id === -1) {\n      return;\n    }\n\n    TodoDataService.retrieveTodo(username, this.state.id).then(response => this.setState({\n      description: response.data.description,\n      targetDate: moment(response.data.targetDate).format('YYYY-MM-DD')\n    }));\n  }\n\n  render() {\n    let {\n      description,\n      targetDate\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Termin \", this.props.match.params.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            description: description,\n            targetDate: targetDate\n          },\n          onSubmit: this.onSubmit,\n          validate: this.validate,\n          validateOnChange: false,\n          validateOnBlur: true,\n          enableReinitialize: true,\n          children: props => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"description\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Beschreibung\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Datum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"targetDate\",\n                component: \"div\",\n                className: \"alert alert-warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"date\",\n                name: \"targetDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default TodoComponent;","map":{"version":3,"sources":["/Users/ali/Documents/WS21/Training Spring React/school-app/src/Components/todo/TodoComponent.jsx"],"names":["React","Component","moment","ErrorMessage","Field","Form","Formik","TodoDataService","AuthenticationService","TodoComponent","constructor","props","onSubmit","values","username","getLoggedInUserName","todo","id","state","description","targetDate","createTodo","then","history","push","updateTodo","validate","errors","length","isValid","title","match","params","Date","format","componentDidMount","retrieveTodo","response","setState","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport moment from 'moment'\nimport { ErrorMessage, Field, Form, Formik } from 'formik'\nimport TodoDataService from '../../api/TodoDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass TodoComponent extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            id : this.props.match.params.id,\n            description : '',\n            targetDate : moment (new Date()).format('YYYY-MM-DD')\n        }\n    }\n\n    componentDidMount() {\n        let username = AuthenticationService.getLoggedInUserName()\n\n        if (this.state.id === -1) {\n            return\n        }\n\n        TodoDataService.retrieveTodo(username, this.state.id)\n        .then(response => this.setState( {\n            description : response.data.description,\n            targetDate : moment(response.data.targetDate).format('YYYY-MM-DD')\n        } \n\n        ))\n            }\n\n    onSubmit=(values)=> {\n        let username = AuthenticationService.getLoggedInUserName()\n        let todo = {\n            id : this.state.id,\n            description : values.description,\n            targetDate : values.targetDate\n        }\n        if (this.state.id == -1) {\n            TodoDataService.createTodo(username,\n                todo).then(() => {this.props.history.push(`/termine`) })\n\n\n        } else {\n            TodoDataService.updateTodo(username, this.state.id, {\n                id: this.state.id,\n                description: values.description,\n                targetDate: values.targetDate\n            }).then(() => { this.props.history.push(`/termine`) })\n        }\n            \n    }\n\n    validate=(values) => {\n        let errors = {}\n        if(!values.description) {\n            errors.description = 'Enter a description'\n        } else if (values.description.length<5) {\n            errors.description='at least 5 chars'\n        }\n\n        if(!moment(values.targetDate).isValid()) {\n            errors.targetDate= 'Ungultiges Datum'\n        }\n        return errors\n    }\n\n    title=()=>{\n        if (this.props.match.params.id === -1) {\n            return <h1>Termin erstellen</h1>\n        } else return <h1>Termin {this.props.match.params.id} bearbeiten</h1>\n\n    }\n\n    render() {\n        let {description, targetDate}= this.state\n        \n        return(\n        <div>\n        <h1>Termin {this.props.match.params.id}</h1>\n\n        <div className=\"container\">\n            <Formik\n\n                initialValues={{\n                    description : description,\n                    targetDate :  targetDate\n                }}\n                onSubmit={this.onSubmit}\n                validate={this.validate}\n\n                validateOnChange={false}\n                validateOnBlur={true}\n                enableReinitialize={true}\n                \n            \n            >\n                {\n                    (props) => (\n                        <Form>\n                            <ErrorMessage name=\"description\" component=\"div\" className=\"alert alert-warning\"></ErrorMessage>\n                            <fieldset className=\"form-group\">\n                                <label>Beschreibung</label>\n                                <Field className=\"form-control\" type=\"text\" name=\"description\" />\n                            </fieldset>\n                            <fieldset className=\"form-group\">\n                                <label>Datum</label>\n                                <ErrorMessage name=\"targetDate\" component=\"div\" className=\"alert alert-warning\"></ErrorMessage>\n                                <Field className=\"form-control\" type=\"date\" name=\"targetDate\"/>\n                            </fieldset>\n                            <button className=\"btn btn-success\">Save</button>\n\n                        </Form>\n                        \n\n                    )\n\n                }\n\n\n\n            </Formik>\n        </div>\n        </div>\n        \n        )\n    }\n}\nexport default TodoComponent"]},"metadata":{},"sourceType":"module"}