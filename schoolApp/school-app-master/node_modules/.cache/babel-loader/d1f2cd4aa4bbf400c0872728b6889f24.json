{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ali/Documents/WS21/Training Spring React/school-app/src/Components/Counter/Counter.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Counter.css';\n\nclass Counter extends Component {\n  constructor() {\n    super();\n\n    this.increment = x => {\n      this.setState({\n        counter: this.state.counter + x\n      });\n    };\n\n    this.state = {\n      counter: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [/*#__PURE__*/_jsxDEV(CounterButton, {\n        incrementMethod: this.increment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CounterButton, {\n        by: 5,\n        incrementMethod: this.increment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CounterButton, {\n        by: 10,\n        incrementMethod: this.increment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nclass CounterButton extends Component {\n  //FOR STATE  define initial state in a constructor\n  // state => counter is 0\n  constructor() {\n    super(); // AUFPASSEN SUPER MUSS\n\n    this.increment = () => {\n      //updates the counter\n      //console.log('increment')\n      //this.state.counter++; BAAAAD\n      this.setState({\n        counter: this.state.counter + this.props.by\n      });\n      this.props.incrementMethod(this.props.by);\n    };\n\n    this.state = {\n      counter: 0\n    }; //BIND THE JS METHOD TO THE CONSTRUCTOR\n    //this.increment = this.increment.bind(this)\n  }\n\n  render() {\n    //const style = {fontSize : \"50px\", padding : \"15px 30px\"};\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counterButton\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment,\n        children: [\"+\", this.props.by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"count\",\n        children: this.state.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 1\n    }, this);\n  } // WHEN USE ARROW FUNCTION NO NEED FOR BINDING\n\n\n} //DEFINE THE PROPS IN A JS OBJECT\n\n\nCounterButton.defaultProps = {\n  by: 1\n};\nexport default Counter;","map":{"version":3,"sources":["/Users/ali/Documents/WS21/Training Spring React/school-app/src/Components/Counter/Counter.jsx"],"names":["React","Component","PropTypes","Counter","constructor","increment","x","setState","counter","state","render","CounterButton","props","by","incrementMethod","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,eAAP;;AAGA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAEhCG,EAAAA,WAAW,GAAG;AACV;;AADU,SAkBRC,SAlBQ,GAkBKC,CAAD,IAAO;AACf,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAG,KAAKC,KAAL,CAAWD,OAAX,GAAqBF;AADrB,OAAd;AAGD,KAtBK;;AAEV,SAAKG,KAAL,GAAa;AACTD,MAAAA,OAAO,EAAG;AADD,KAAb;AAGH;;AAGGE,EAAAA,MAAM,GAAG;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,eAAe,EAAE,KAAKL;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAe,QAAA,EAAE,EAAE,CAAnB;AAAsB,QAAA,eAAe,EAAE,KAAKA;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,aAAD;AAAe,QAAA,EAAE,EAAE,EAAnB;AAAuB,QAAA,eAAe,EAAE,KAAKA;AAA7C;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAlByB;;AA4BhC,MAAMM,aAAN,SAA4BV,SAA5B,CAAsC;AAGlC;AACJ;AAEAG,EAAAA,WAAW,GAAG;AACV,YADU,CACH;;AADG,SAqBVC,SArBU,GAqBE,MAAM;AAAE;AAChB;AACA;AACA,WAAKE,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAG,KAAKC,KAAL,CAAWD,OAAX,GAAqB,KAAKI,KAAL,CAAWC;AADhC,OAAd;AAGA,WAAKD,KAAL,CAAWE,eAAX,CAA2B,KAAKF,KAAL,CAAWC,EAAtC;AACH,KA5BS;;AAEV,SAAKJ,KAAL,GAAa;AACTD,MAAAA,OAAO,EAAG;AADD,KAAb,CAFU,CAKV;AACA;AACH;;AACGE,EAAAA,MAAM,GAAI;AAEV;AAEA,wBACJ;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,KAAKL,SAAtB;AAAA,wBAAmC,KAAKO,KAAL,CAAWC,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA,kBAA0B,KAAKJ,KAAL,CAAWD;AAArC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADI;AAMC,GAxBiC,CA0BlC;;;AA1BkC,C,CAqCtC;;;AACAG,aAAa,CAACI,YAAd,GAA6B;AACzBF,EAAAA,EAAE,EAAG;AADoB,CAA7B;AAKA,eAAeV,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport './Counter.css'\n\n\nclass Counter extends Component {\n\nconstructor() {\n    super()\n    this.state = {\n        counter : 0\n    }\n}\n\n\n    render() {\n        return (\n          <div className=\"counter\">\n            <CounterButton incrementMethod={this.increment}/>\n            <CounterButton by={5} incrementMethod={this.increment} />\n            <CounterButton by={10} incrementMethod={this.increment}/>\n          </div>\n        );\n      }\n\n      increment = (x) => {\n          this.setState({\n              counter : this.state.counter + x\n          });\n        }\n      \n}\n\nclass CounterButton extends Component {\n\n\n    //FOR STATE  define initial state in a constructor\n// state => counter is 0\n\nconstructor() {\n    super()// AUFPASSEN SUPER MUSS\n    this.state = {\n        counter : 0\n    }\n    //BIND THE JS METHOD TO THE CONSTRUCTOR\n    //this.increment = this.increment.bind(this)\n}\n    render () {\n\n    //const style = {fontSize : \"50px\", padding : \"15px 30px\"};\n\n    return (\n<div className=\"counterButton\">\n    <button onClick={this.increment}>+{this.props.by}</button>\n    <span className=\"count\" >{this.state.counter}</span>\n</div>\n    )\n    }\n\n    // WHEN USE ARROW FUNCTION NO NEED FOR BINDING\n    increment = () => { //updates the counter\n        //console.log('increment')\n        //this.state.counter++; BAAAAD\n        this.setState({\n            counter : this.state.counter + this.props.by\n        });\n        this.props.incrementMethod(this.props.by);\n    }   \n}\n\n//DEFINE THE PROPS IN A JS OBJECT\nCounterButton.defaultProps = {\n    by : 1\n}\n\n\nexport default Counter\n"]},"metadata":{},"sourceType":"module"}