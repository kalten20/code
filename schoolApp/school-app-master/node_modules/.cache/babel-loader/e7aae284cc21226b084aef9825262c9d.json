{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ali/Documents/WS21/Training Spring React/school-app/src/Components/todo/TodoComponent.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport TodoDataService from '../../api/TodoDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\n\nclass TodoComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = values => {\n      console.log(values);\n    };\n\n    this.validate = values => {\n      let errors = {};\n\n      if (!values.description) {\n        errors.description = 'Enter a description';\n      } else if (values.description.length < 5) {\n        errors.description = 'at least 5 chars';\n      }\n\n      if (!moment(values.targetDate).isValid()) {\n        errors.targetDate = 'Ungultiges Datum';\n      }\n\n      return errors;\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      description: '',\n      targetDate: moment(new Date()).format('YYYY-MM-DD')\n    };\n  }\n\n  componentDidMount() {\n    let username = AuthenticationService.getLoggedInUserName();\n    TodoDataService.retrieveTodo(username, this.state.id).then(response => this.setState({\n      description: response.data.description,\n      targetDate: moment(response.data.targetDate).format('YYYY-MM-DD')\n    }));\n  }\n\n  render() {\n    let {\n      description,\n      targetDate\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Termin \", this.props.match.params.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            description: description,\n            targetDate: targetDate\n          },\n          onSubmit: this.onSubmit,\n          validate: this.validate,\n          validateOnChange: false,\n          validateOnBlur: false,\n          enableReinitialize: true,\n          children: props => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"description\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Beschreibung\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Datum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"targetDate\",\n                component: \"div\",\n                className: \"alert alert-warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"date\",\n                name: \"targetDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default TodoComponent;","map":{"version":3,"sources":["/Users/ali/Documents/WS21/Training Spring React/school-app/src/Components/todo/TodoComponent.jsx"],"names":["React","Component","moment","ErrorMessage","Field","Form","Formik","TodoDataService","AuthenticationService","TodoComponent","constructor","props","onSubmit","values","console","log","validate","errors","description","length","targetDate","isValid","state","id","match","params","Date","format","componentDidMount","username","getLoggedInUserName","retrieveTodo","then","response","setState","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport moment from 'moment'\nimport { ErrorMessage, Field, Form, Formik } from 'formik'\nimport TodoDataService from '../../api/TodoDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass TodoComponent extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            id : this.props.match.params.id,\n            description : '',\n            targetDate : moment (new Date()).format('YYYY-MM-DD')\n        }\n    }\n\n    componentDidMount() {\n        let username = AuthenticationService.getLoggedInUserName()\n\n        TodoDataService.retrieveTodo(username, this.state.id)\n        .then(response => this.setState( {\n            description : response.data.description,\n            targetDate : moment(response.data.targetDate).format('YYYY-MM-DD')\n        }\n\n        ))\n            }\n\n    onSubmit=(values)=> {\n        console.log(values)\n    }\n\n    validate=(values) => {\n        let errors = {}\n        if(!values.description) {\n            errors.description = 'Enter a description'\n        } else if (values.description.length<5) {\n            errors.description='at least 5 chars'\n        }\n\n        if(!moment(values.targetDate).isValid()) {\n            errors.targetDate= 'Ungultiges Datum'\n        }\n        return errors\n    }\n\n    render() {\n        let {description, targetDate}= this.state\n        \n        return(\n        <div>\n        <h1>Termin {this.props.match.params.id}</h1>\n\n        <div className=\"container\">\n            <Formik\n\n                initialValues={{\n                    description : description,\n                    targetDate :  targetDate\n                }}\n                onSubmit={this.onSubmit}\n                validate={this.validate}\n\n                validateOnChange={false}\n                validateOnBlur={false}\n                enableReinitialize={true}\n                \n            \n            >\n                {\n                    (props) => (\n                        <Form>\n                            <ErrorMessage name=\"description\" component=\"div\" className=\"alert alert-warning\"></ErrorMessage>\n                            <fieldset className=\"form-group\">\n                                <label>Beschreibung</label>\n                                <Field className=\"form-control\" type=\"text\" name=\"description\" />\n                            </fieldset>\n                            <fieldset className=\"form-group\">\n                                <label>Datum</label>\n                                <ErrorMessage name=\"targetDate\" component=\"div\" className=\"alert alert-warning\"></ErrorMessage>\n                                <Field className=\"form-control\" type=\"date\" name=\"targetDate\"/>\n                            </fieldset>\n                            <button className=\"btn btn-success\">Save</button>\n\n                        </Form>\n                        \n\n                    )\n\n                }\n\n\n\n            </Formik>\n        </div>\n        </div>\n        \n        )\n    }\n}\nexport default TodoComponent"]},"metadata":{},"sourceType":"module"}