{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ali/Documents/WS21/Training Spring React/todo-app/src/Components/Counter/Counter.jsx\";\nimport React, { Component } from 'react';\nimport './Counter.css';\n\nclass Counter extends Component {\n  //FOR STATE  define initial state in a constructor\n  // state => counter is 0\n  constructor() {\n    super(); // AUFPASSEN SUPER MUSS\n\n    this.increment = () => {\n      //updates the counter\n      //console.log('increment')\n      //this.state.counter++; BAAAAD\n      this.setState({\n        counter: this.state.counter + 1\n      });\n    };\n\n    this.state = {\n      counter: 0,\n      secondCounter: 100\n    }; //BIND THE JS METHOD TO THE CONSTRUCTOR\n    //this.increment = this.increment.bind(this)\n  }\n\n  render() {\n    let style = {};\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [\"This is a Counter\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment,\n        children: \"+1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"count\",\n        children: this.state.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 1\n    }, this);\n  } // WHEN USE ARROW FUNCTION NO NEED FOR BINDING\n\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/ali/Documents/WS21/Training Spring React/todo-app/src/Components/Counter/Counter.jsx"],"names":["React","Component","Counter","constructor","increment","setState","counter","state","secondCounter","render","style"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAE5B;AACJ;AAEAE,EAAAA,WAAW,GAAG;AACV,YADU,CACH;;AADG,SAuBVC,SAvBU,GAuBE,MAAM;AAAE;AAChB;AACA;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAG,KAAKC,KAAL,CAAWD,OAAX,GAAoB;AADpB,OAAd;AAGH,KA7BS;;AAEV,SAAKC,KAAL,GAAa;AACTD,MAAAA,OAAO,EAAG,CADD;AAETE,MAAAA,aAAa,EAAG;AAFP,KAAb,CAFU,CAMV;AACA;AACH;;AACGC,EAAAA,MAAM,GAAI;AAEV,QAAIC,KAAK,GAAG,EAAZ;AAEA,wBACJ;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,mDAEI;AAAQ,QAAA,OAAO,EAAE,KAAKN,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA,kBAAyB,KAAKG,KAAL,CAAWD;AAApC;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADI;AAOC,GAzB2B,CA2B5B;;;AA3B4B;;AAqChC,eAAeJ,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Counter.css'\n\nclass Counter extends Component {\n\n    //FOR STATE  define initial state in a constructor\n// state => counter is 0\n\nconstructor() {\n    super()// AUFPASSEN SUPER MUSS\n    this.state = {\n        counter : 0,\n        secondCounter : 100\n    }\n    //BIND THE JS METHOD TO THE CONSTRUCTOR\n    //this.increment = this.increment.bind(this)\n}\n    render () {\n\n    let style = {}\n\n    return (\n<div className=\"counter\">\n    This is a Counter\n    <button onClick={this.increment}>+1</button>\n    <span className=\"count\">{this.state.counter}</span>\n</div>\n    )\n    }\n\n    // WHEN USE ARROW FUNCTION NO NEED FOR BINDING\n    increment = () => { //updates the counter\n        //console.log('increment')\n        //this.state.counter++; BAAAAD\n        this.setState({\n            counter : this.state.counter +1\n        });\n    }\n}\n\nexport default Counter"]},"metadata":{},"sourceType":"module"}