{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ali/Documents/WS21/Training Spring React/todo-app/src/Components/todo/TodoApp.jsx\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nclass TodoApp extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoApp\",\n      children: [\"My   Todo Application\", /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            component: LoginComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            component: LoginComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/wellcome/:name\",\n            component: WellcomeComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/todos\",\n            component: ListTodosComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            component: ErrorComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass ListTodosComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [{\n        id: 1,\n        description: 'learn React'\n      }, {\n        id: 2,\n        description: 'Get drunk'\n      }, {\n        id: 3,\n        description: 'Get laid'\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TODO LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.state.todo.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.state.todo.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass WellcomeComponent extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Wellcome \", this.props.match.params.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      console.log(event.target.name);\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.loginClicked = () => {\n      if (this.state.username === 'ali' && this.state.password === 'jemel') {\n        this.props.history.push(`/wellcome/${this.state.username}`); //this.setState({success : true})\n        //this.setState({failed : false})\n      } else {\n        this.setState({\n          failed: true\n        });\n        this.setState({\n          success: false\n        });\n      }\n    };\n\n    this.state = {\n      username: 'enter username',\n      password: '',\n      failed: false,\n      success: false\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //TRUE && True returns the second term !!!!!!!!!!!!!!!!!!!!!!!!!!!!\n      _jsxDEV(\"div\", {\n        children: [this.state.failed && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Invalid Creds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 37\n        }, this), this.state.success && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Success Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 37\n        }, this), \"User Name : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: this.state.username,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.loginClicked,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\nfunction ErrorComponent() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"An error occured\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 12\n  }, this);\n} // function ShowLoginFailMessage(props) {\n//     if(props.ShowFailMessage) {\n//        return  <div>EPIC FAIL</div>\n//     } \n//     else return null\n// }\n// function ShowLoginSuccessMessage(props) {\n//     if(props.ShowSuccessMessage) {\n//        return  <div>Login Success</div>\n//     } \n//     else return null\n// }\n\n\n_c = ErrorComponent;\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ErrorComponent\");","map":{"version":3,"sources":["/Users/ali/Documents/WS21/Training Spring React/todo-app/src/Components/todo/TodoApp.jsx"],"names":["React","Component","BrowserRouter","Router","Route","Switch","TodoApp","render","LoginComponent","WellcomeComponent","ListTodosComponent","ErrorComponent","constructor","props","state","todos","id","description","map","todo","match","params","name","handleChange","event","console","log","target","setState","value","loginClicked","username","password","history","push","failed","success"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n\n\nclass TodoApp extends Component {\n    render() {\n        return (\n           <div className=\"todoApp\">\n               My   Todo Application\n\n               <Router>\n                   \n                   <Switch>\n\n                   <Route path=\"/\" exact component={LoginComponent}/>\n                   <Route path=\"/login\" component={LoginComponent}/>\n                   <Route path=\"/wellcome/:name\" component={WellcomeComponent}/>\n                   <Route path=\"/todos\" component={ListTodosComponent}/>\n                   <Route component={ErrorComponent}/>\n\n                   </Switch>\n                   \n               </Router>\n\n               {/*<LoginComponent />\n               <WellcomeComponent />*/}\n\n           </div>\n        )\n    }\n}\n\nclass ListTodosComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            todos :\n            [ \n            {id : 1, description : 'learn React'},\n            {id : 2, description : 'Get drunk'},\n            {id : 3, description : 'Get laid'}\n            ]\n        }\n    }\n    render () {\n        return (\n            <div>\n                <h1>TODO LIST</h1>\n\n                <table>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                        this.state.todos.map(\n                            todo => \n                            <tr>\n                            <td>{this.state.todo.id}</td>\n                            <td>{this.state.todo.description}</td>\n                        </tr>\n                        )\n                        \n                        }\n                    </tbody>\n                </table>\n                \n            </div>\n        )\n    }\n}\n\nclass WellcomeComponent extends Component {\n    render() {\n        return (\n        <div> Wellcome {this.props.match.params.name}</div>  \n        )\n    }\n}\n\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            username : 'enter username',\n            password : '',\n            failed : false,\n            success : false\n        }\n    }\n\n    handleChange = (event) => {\n        console.log(event.target.name);\n        this.setState(\n            {\n                [event.target.name] : event.target.value\n            }\n        )\n    }\n\n    loginClicked = () => {\n        if(this.state.username === 'ali' && this.state.password === 'jemel'){\n            this.props.history.push(`/wellcome/${this.state.username}`)\n        //this.setState({success : true})\n        //this.setState({failed : false})\n        }else {\n        this.setState({failed : true})\n        this.setState({success : false})\n        }\n\n    }\n    render(){\n        return(\n            //TRUE && True returns the second term !!!!!!!!!!!!!!!!!!!!!!!!!!!!\n            <div>\n                \n             {this.state.failed &&  <div>Invalid Creds</div>}\n             {this.state.success && <div>Success Login</div>}\n\n             {/*<ShowLoginSuccessMessage ShowSuccessMessage={this.state.success}/>*/}\n\n            User Name : <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}></input>\n        \n            Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}></input>\n\n            <button onClick={this.loginClicked}>Login</button>\n            </div>\n\n        )\n    }\n}\n\nfunction ErrorComponent() {\n    return <div>An error occured</div>\n}\n// function ShowLoginFailMessage(props) {\n//     if(props.ShowFailMessage) {\n//        return  <div>EPIC FAIL</div>\n//     } \n//     else return null\n// }\n\n\n// function ShowLoginSuccessMessage(props) {\n//     if(props.ShowSuccessMessage) {\n//        return  <div>Login Success</div>\n//     } \n//     else return null\n// }\n\n\nexport default TodoApp"]},"metadata":{},"sourceType":"module"}