{"ast":null,"code":"import axios from 'axios';\n\nclass TodoDataService {\n  retrieveAllTodos(username) {\n    return axios.get(`http://localhost:8080/users/${username}/todos`, {\n      headers: {\n        authorization\n      }\n    });\n  }\n\n  deleteTodo(username, id) {\n    return axios.delete(`http://localhost:8080/users/${username}/todos/${id}`);\n  }\n\n  retrieveTodo(username, id) {\n    return axios.get(`http://localhost:8080/users/${username}/todos/${id}`);\n  }\n\n  updateTodo(username, id, todo) {\n    return axios.put(`http://localhost:8080/users/${username}/todos/${id}`, todo);\n  }\n\n  createTodo(username, todo) {\n    return axios.post(`http://localhost:8080/users/${username}/todos/`, todo);\n  }\n\n}\n\nexport default new TodoDataService();","map":{"version":3,"sources":["/Users/ali/Documents/WS21/Training Spring React/school-app/src/api/TodoDataService.js"],"names":["axios","TodoDataService","retrieveAllTodos","username","get","headers","authorization","deleteTodo","id","delete","retrieveTodo","updateTodo","todo","put","createTodo","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,eAAN,CAAsB;AAElBC,EAAAA,gBAAgB,CAACC,QAAD,EAAW;AACvB,WAAOH,KAAK,CAACI,GAAN,CAAW,+BAA8BD,QAAS,QAAlD,EACP;AACIE,MAAAA,OAAO,EAAG;AACNC,QAAAA;AADM;AADd,KADO,CAAP;AASH;;AAEDC,EAAAA,UAAU,CAACJ,QAAD,EAAWK,EAAX,EAAc;AAEpB,WAAOR,KAAK,CAACS,MAAN,CAAc,+BAA8BN,QAAS,UAASK,EAAG,EAAjE,CAAP;AACH;;AAEDE,EAAAA,YAAY,CAACP,QAAD,EAAUK,EAAV,EAAa;AACrB,WAAOR,KAAK,CAACI,GAAN,CAAW,+BAA8BD,QAAS,UAASK,EAAG,EAA9D,CAAP;AACH;;AAEDG,EAAAA,UAAU,CAACR,QAAD,EAAUK,EAAV,EAAcI,IAAd,EAAmB;AACzB,WAAOZ,KAAK,CAACa,GAAN,CAAW,+BAA8BV,QAAS,UAASK,EAAG,EAA9D,EAAiEI,IAAjE,CAAP;AACH;;AAEDE,EAAAA,UAAU,CAACX,QAAD,EAAWS,IAAX,EAAgB;AACtB,WAAOZ,KAAK,CAACe,IAAN,CAAY,+BAA8BZ,QAAS,SAAnD,EAA6DS,IAA7D,CAAP;AACH;;AA7BiB;;AAqCtB,eAAe,IAAIX,eAAJ,EAAf","sourcesContent":["import axios from 'axios'\n\n\nclass TodoDataService {\n\n    retrieveAllTodos(username) {\n        return axios.get(`http://localhost:8080/users/${username}/todos`,\n        {\n            headers : {\n                authorization \n            }\n        }\n        \n        )\n\n    }\n\n    deleteTodo(username, id){\n\n        return axios.delete(`http://localhost:8080/users/${username}/todos/${id}`)\n    }\n\n    retrieveTodo(username,id){\n        return axios.get(`http://localhost:8080/users/${username}/todos/${id}`)\n    }\n\n    updateTodo(username,id, todo){\n        return axios.put(`http://localhost:8080/users/${username}/todos/${id}`, todo)\n    }\n    \n    createTodo(username, todo){\n        return axios.post(`http://localhost:8080/users/${username}/todos/`, todo)\n    }\n\n\n\n\n\n}\n\nexport default new TodoDataService()"]},"metadata":{},"sourceType":"module"}